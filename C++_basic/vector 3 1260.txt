#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

struct Review
{
	std::string title;
	int rating;
};

bool operator <(const Review& r1, const Review& r2);
bool worseThan(const Review& r1, const Review& r2);
bool FillReview(Review& rr);
void ShowReview(const Review& rr);

int main()
{
	using namespace std;

	vector<Review> book;
	Review temp;

	while (FillReview(temp))
		book.push_back(temp);

	if (book.size() > 0)
	{
		cout << book.size() << "개 입력함\n" << "등급\t제목\n";

		for_each(book.begin(), book.end(), ShowReview); //처음부터 끝까지 showreview 실행

		sort(book.begin(), book.end()); //operator <로 특정한 조건 작성
		cout << "책 제목을 기준으로 정렬:\n등급\t제목";
		for_each(book.begin(), book.end(), ShowReview);

		sort(book.begin(), book.end(), worseThan); //operator대신에 worsethan이 들어감
		cout << "책 등급 기준으로 정렬:\n등급\t제목";
		for_each(book.begin(), book.end(), ShowReview);

		random_shuffle(book.begin(), book.end());
		cout << "무작위 기준으로 정렬:\n등급\t제목";
		for_each(book.begin(), book.end(), ShowReview);
	}

	else
		cout << "프로그램 종료\n";
	return 0;

}

//sort를사용하기위해 정의해준다.
bool operator <(const Review& r1, const Review& r2)
{
	if (r1.title < r2.title)
		return true;

	else if (r1.title == r2.title && r1.rating < r2.rating)
		return true;
	else
		return false;
}



bool worseThan(const Review& r1, const Review& r2)
{
	if (r1.rating < r2.rating)
		return true;

	else 
		return false;
}

bool FillReview(Review& rr)
{
	std::cout << "책 제목 입력 (끝내려면 q입력)";
	std::getline(std::cin, rr.title);

	if (rr.title == "q")
		return false;

	std::cout << "책 등급 입력";
	std::cin >> rr.rating;
	if (!std::cin)
		return false;

	while (std::cin.get() != '\n')
		continue;

	return true;
}

void ShowReview(const Review& rr)
{
	std::cout << rr.rating << "\t" << rr.title << std::endl;
}

