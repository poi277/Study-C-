#include <iostream>
#include "asd.h"

class time
{
private:
	int hours;
	int minutes;

public:
	time();
	time(int h, int m = 0);
	void addmin(int m);
	void addhr(int h);
	void reset(int h = 0, int m = 0);
	time operator+(const time& t)const;
	time operator- (const time & t)const;
	time operator*(double n)const;
	void show() const;


};


time::time()
{
	hours = minutes = 0;
}

time::time(int h , int m)
{
	hours = h;
	minutes = m;
}

void time::addmin(int m)
{
	minutes += m;
	hours += minutes / 60;
	minutes %= 60;
}

void time::addhr(int h)
{
	hours += h;
}
void time::reset(int h, int m)
{
	hours = h;
	minutes = m;
}


time time::operator+(const time& t)const
{
	time sum;
	sum.minutes = minutes + t.minutes;
	sum.hours = hours + t.hours + sum.minutes / 60;
	sum.minutes %= 60;
	return sum;
}
time time::operator-(const time& t)const
{
	time diff;
	int tot1, tot2;
	tot1 = t.minutes + 60 * t.hours;
	tot2 = minutes + 60 * hours;
	diff.minutes = (tot2 - tot1) % 60;
	diff.hours = (tot2 - tot1) / 60;
	return diff;
}

time time::operator*(double mult)const
{
	time result;
	long totalminutes = hours * mult * 60 + minutes * mult;
	result.minutes = totalminutes % 60;
	return result;
}

void time::show() const
{
	std::cout << hours << "시간"<< minutes << "분";
}


int main()
{
	using namespace std;

	time weeding(4,35);
	time waxing(5,55);
	time total;
	time adjusted;
	time diff;

	cout << "weeding =";
	weeding.show();
	cout << endl;

	cout << "waxing time=";
	waxing.show();
	cout << endl;

	cout << "total work time =";
	total = weeding + waxing;
	total.show();
	cout << endl;


	diff = weeding - waxing;
	cout << "weeding - waxing";
	diff.show();
	cout << endl;

	adjusted = total * 1.5;
	cout << "adjusted work time=";
	adjusted.show();
	cout << endl;

	return 0;
	
}