#include <iostream>
#include "asd.h"
#include <string>
const int four = 4;

class stock
{
public:
	stock();
	stock(const std::string& co, long n = 0, double pr = 0.0);
	~stock();
	void buy(long num, double price);
	void sell(long num, double price);
	void update(double price);
	void show() const;
	const stock& topval(const stock& s)const;

private:
	std::string company;
	long shares;
	double share_val;
	double total_val;
	void set_tot() { total_val = shares * share_val; }

};


stock::stock()
{
	std::cout << "디폴트 생성자 호출\n";
	company = "no name";
	shares = 0;
	share_val = 0.0;
	total_val = 0.0;
}

stock::stock(const std::string  &co, long n, double pr)
{
	company = co;

	if (n < 0)
	{
		std::cout << "주식 수는 음수가 될수 없으므로," << company << "shares를 0으로 설정합니다.\n";

		shares = 0;
	}
	else
		shares = n;
	share_val = pr;
	set_tot();
}

stock::~stock()
{
	std::cout << "안녕," << company << "\n";
}

void stock::buy(long num, double price)
{
	if (num < 0)
	{
		std::cout << "매입이 주식수는 음수가 될수 없으므로,거래가 취소되었습니다\n";

	}
	else
	{
		shares += num;
		share_val = price;
		set_tot();
	}
}
void stock::sell(long num, double price)
{
	using std::cout;
	if (num < 0)
	{
		cout << "매도 주식 수는 음수가 될수 없으므로, 거래가 취소되었습니다\n";
	}
	else if (num > shares)
	{
		cout << "보유 주식보다 많은 주식을 매도할수 없으므로,거래가 취소되었습니다";

	}
	else
	{
		shares -= num;
		share_val = price;
		set_tot();
	}
}

void stock::update(double price)
{
	share_val = price;
	set_tot();
}

void stock::show() const
{
	using std::cout;
	using std::ios_base;
	ios_base::fmtflags orig = cout.setf(ios_base::fixed, ios_base::floatfield);
	std::streamsize prec = cout.precision(3);

	cout << "회사명:" << company << "주식수:" << shares << '\n';

	cout << "주가:$"<<share_val;

	cout.precision(2);
	cout << "주식 총 가치$:" << total_val << '\n';

	cout.setf(orig, ios_base::floatfield);
	cout.precision(prec);
}

const stock& stock::topval(const stock& s) const
{
	if (s.total_val > total_val)
	return s;

	else
		return *this;
}

int main()
{
	stock stocks[four] = {
		stock("nanosmart",12,20.0),
		stock("boffo",200,2.0),
		stock("monolithic oblisks",130,3.25),
		stock("fleep enterprises",60,6.5)
	};

	std::cout << "보유 주식 리스트:\n";
	int st;
	for (st = 0; st < four; st++)
		stocks[st].show();

	const stock* top = &stocks[0];
	for (st = 1; st < four; st++)
		top = &top->topval(stocks[st]);

	std::cout << "\n최고 가치의 주식:\n";
	top->show();
	return 0;
}